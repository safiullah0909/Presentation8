# Lecture 7
## SYNCHRONOUS
### the type of codes that are read one by one 
### and when one of them thosent work the other after that alse dont work
### and when taking information from bac end we cant use these types of codes becuse they  work right away! and dose wait! 
![](https://th.bing.com/th/id/OIP.N7zFuimk4KqIus_9Hs52SAHaDu?pid=ImgDet&rs=1)

## ASYNCHRONOUS
### its the complete oposite of the SYNCHRONOUS and its the best way to take information from back-end and it has lots of other features !

## ASYNCHRONOUS
### Asynchronous code in JavaScript can be written using
### Asynchronous code in JavaScript can be written using
### promises, 
### async/await syntax.

## ASYNCHRONOUS
### Callbacks are functions that are passed as arguments to other functions and are executed when the called function completes its task. Callbacks can be used to handle asynchronous operations by passing a callback function to an asynchronous method, which then calls the callback function when the operation is complete.
![](https://th.bing.com/th/id/OIP.ML9K_hsqjS7x38jmgXifhQHaET?pid=ImgDet&rs=1)
## New PROMIsE IN JAVASCRIPT
### In JavaScript, a promise is a good way to handle asynchronous operations. It is used to find out if the asynchronous operation is successfully completed or not.
## A promise may have one of three states
## Pending
## Fulfilled
## Rejected

## Async function
![](https://th.bing.com/th/id/R.9d784596355066950c99628d762925d5?rik=yqDpGLRK024Y2w&pid=ImgRaw&r=0)

### We use the async keyword with a function to represent that the function is an asynchronous function. The async function returns a promise.The syntax of async function is:

## Try / catch
![](https://th.bing.com/th/id/OIP.3BMkxF5WdM-Fc0VFfDW_AgHaFj?pid=ImgDet&rs=1)
## that the end of todays lesson peace
![](https://th.bing.com/th/id/OIP.B_yqmoy6T_cacRXTYTWwxQHaEo?pid=ImgDet&rs=1)
